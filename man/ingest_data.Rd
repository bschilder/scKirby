% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ingest_data.R
\name{ingest_data}
\alias{ingest_data}
\title{Import and standardize scRNAseq data across different formats}
\source{
\href{https://mojaveazure.github.io/seurat-disk/articles/convert-anndata.html}{SeuratDisk}
\href{https://github.com/rcannood/anndata}{anndata (R)}
\href{https://anndata.readthedocs.io/en/latest/}{anndata (python)}
\href{https://satijalab.org/loomR/loomR_tutorial.html}{loomR}
\href{https://bioconductor.org/packages/release/bioc/vignettes/SingleCellExperiment/inst/doc/intro.html}{SingleCellExperiment}
\href{https://petehaitch.github.io/BioC2020_DelayedArray_workshop/articles/Effectively_using_the_DelayedArray_framework_for_users.html}{DelayedArray workshop}
\href{https://theislab.github.io/zellkonverter/articles/zellkonverter.html}{zellkonverter}
}
\usage{
ingest_data(
  obj,
  filetype = "guess",
  custom_reader = NULL,
  sce_save_dir = NULL,
  quicksave_HDF5 = T,
  overwrite = F,
  verbose = T,
  ...
)
}
\description{
Automatically infers data format of scRNAseq object, or a path to that object.
It then uses the appropriate functions to import that data and convert it to a
\pkg{SingleCellExperiment}, which is recognized by other \pkg{EWCE} functions.
}
\examples{
\dontrun{
library(SummarizedExperiment)
library(Seurat)
data("pbmc_small")
pbmc_small <- UpdateSeuratObject(pbmc_small)

#### Ingest expression matrix ####
sce <- ingest_data(obj=pbmc_small@assays$RNA@counts)

#### Ingest EWCElist ####
\dontrun{
### Example requires  data from \code{ewceData} package
cortex_mrna <- ewceData::cortex_mrna()
sce <- ingest_data(obj=cortex_mrna)
}

#### Ingest Seurat object in memory ####
sce <- ingest_data(obj=pbmc_small)

#### Ingest HDF5 SingleCellExperiment ####
sce <- HDF5Array::saveHDF5SummarizedExperiment(sce, dir = "~/Desktop/pbmc_small_h5", replace=T)
## Read in the sce object directly
sce <- ingest_data(obj=sce)
## Read it from disk
sce <- ingest_data(obj="~/Desktop/pbmc_small_h5")

#### Ingest AnnData ####
library(anndata)
## Can point to where anndata is installed (or should be installed)
## Can also just run anndata::install_anndata() and will install via miniconda
conda_dir <- dirname(dirname(reticulate::conda_list()[1,]$python))
reticulate::use_condaenv(condaenv = conda_dir)
reticulate::conda_install(conda = conda_dir, packages = "loompy", pip = T)
anndata::install_anndata(method = "conda", conda=conda_dir)

# Convert Seurat object to AnnData for example data
adata <- anndata::AnnData(X = t(GetAssay(pbmc_small)@counts), obs = pbmc_small@meta.data, var = GetAssay(pbmc_small)@meta.features )
## In memory
sce <- ingest_data(obj=adata)
## On disk
adata$write_h5ad(filename = "Desktop/pbmc_small.h5ad")
sce <- ingest_data(obj = "Desktop/pbmc_small.h5ad")


#### Ingest H5Seurat ####
library(SeuratDisk)
SaveH5Seurat(pbmc_small, filename = "~/Desktop/pbmc_small.h5Seurat", overwrite = T)
sce <- ingest_data(obj="~/Desktop/pbmc_small.h5Seurat")

#### Ingest loom (from loomR) ####
library(loomR)
loom <- loomR::create(data=adata, filename = "~/Desktop/pbmc_small.loom", overwrite = T)
## In memory
sce <- ingest_data(obj=loom)
## From disk
sce <- ingest_data(obj="~/Desktop/pbmc_small.loom")
}
}
